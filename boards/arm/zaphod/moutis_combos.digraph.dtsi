/*
*
* SPDX-License-Identifier: MIT
*
*/

#define COMBO_LAYER(NAME, BINDINGS, KEYPOS, LAYERS) \
  combo_##NAME { \
    bindings = <BINDINGS>; \
    key-positions = <KEYPOS>; \
    layers = <LAYERS>; \
    timeout-ms = <40>; \
};
#define COMBO_ANY(NAME, BINDINGS, KEYPOS) \
  combo_##NAME { \
    bindings = <BINDINGS>; \
    key-positions = <KEYPOS>; \
    timeout-ms = <40>; \
};


combos {
    compatible = "zmk,combos";

/*    KEY POSITION Names for Zaphod
╭─────────────────────╮ ╭─────────────────────╮
│ LT4 LT3 LT2 LT1 LT0 │ │ RT0 RT1 RT2 RT3 RT4 │
│ LM4 LM3 LM2 LM1 LM0 │ │ RM0 RM1 RM2 RM3 RM4 │
│ LB4 LB3 LB2 LB1 LB0 │ │ RB0 RB1 RB2 RB3 RB4 │
╰───────────╮ LH2 LH1 | | RH1 RH2 ╭───────────╯
            ╰─────────╯ ╰─────────╯
*/
//
// H Digraphs REQUIRE macros (defined earlier) to process
//
COMBO_LAYER(th,  &dTh,   LM2 LM1, l_alpha) // Th
COMBO_LAYER(ch,  &dCh,   LM3 LM2, l_alpha) // Ch
COMBO_LAYER(wh,  &dWh,   LT3 LT2, l_alpha) // Wh
COMBO_LAYER(sh,  &dSh,   LM3 LM1, l_alpha) // Sh
COMBO_LAYER(gh,  &lk_gh G H,   LT2 LT1, l_alpha) // Gh
COMBO_LAYER(ph,  &dPh,   LB3 LB1, l_alpha) // Ph

         
/* type a glyph */

COMBO_LAYER(ligAE, &kp LA(APOS),    RM1 RB1, l_alpha) // ligature æ
COMBO_LAYER(ligOE, &kp LA(Q),       RM2 RB2, l_alpha) // ligature œ

COMBO_LAYER(diacAccent, &kp LA(E),  RM1 RM2, l_alpha) // ´
COMBO_LAYER(diacGrave, &kp LA(GRAVE), RM2 RM3, l_alpha) // `
COMBO_LAYER(diacAcute, &kp LA(N6),  RM1 RM3, l_alpha) // ˆ
COMBO_LAYER(diacMacron, &kp LA(A),  RM2 RM4, l_alpha) // ¯
COMBO_LAYER(diacCirc, &kp LA(K),    RM1 RM4, l_alpha) // ˚
COMBO_LAYER(diacUmlaut, &kp LA(U),  RB1 RB2, l_alpha) // ¨

};
